# pylint: disable=line-too-long
import numpy as np

from .puzzles import Puzzles


def test_globe_3_4():
    graph = Puzzles.globe_puzzle(3, 4)

    assert graph.n_generators == 16
    expected_names_1 = ["r0", "r0_inv", "r1", "r1_inv", "r2", "r2_inv", "r3", "r3_inv"]
    expected_names_2 = ["f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7"]
    assert graph.generator_names == expected_names_1 + expected_names_2
    assert graph.name == "globe_puzzle-3-4"

    # fmt: off
    expected_generators = [
        [1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
        [7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
        [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
        [0, 1, 2, 3, 4, 5, 6, 7, 15, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 16, 24, 25, 26, 27, 28, 29, 30, 31],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 24],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 24, 25, 26, 27, 28, 29, 30],
        [27, 26, 25, 24, 4, 5, 6, 7, 19, 18, 17, 16, 12, 13, 14, 15, 11, 10, 9, 8, 20, 21, 22, 23, 3, 2, 1, 0, 28, 29, 30, 31],
        [0, 28, 27, 26, 25, 5, 6, 7, 8, 20, 19, 18, 17, 13, 14, 15, 16, 12, 11, 10, 9, 21, 22, 23, 24, 4, 3, 2, 1, 29, 30, 31],
        [0, 1, 29, 28, 27, 26, 6, 7, 8, 9, 21, 20, 19, 18, 14, 15, 16, 17, 13, 12, 11, 10, 22, 23, 24, 25, 5, 4, 3, 2, 30, 31],
        [0, 1, 2, 30, 29, 28, 27, 7, 8, 9, 10, 22, 21, 20, 19, 15, 16, 17, 18, 14, 13, 12, 11, 23, 24, 25, 26, 6, 5, 4, 3, 31],
        [0, 1, 2, 3, 31, 30, 29, 28, 8, 9, 10, 11, 23, 22, 21, 20, 16, 17, 18, 19, 15, 14, 13, 12, 24, 25, 26, 27, 7, 6, 5, 4],
        [29, 1, 2, 3, 4, 24, 31, 30, 21, 9, 10, 11, 12, 16, 23, 22, 13, 17, 18, 19, 20, 8, 15, 14, 5, 25, 26, 27, 28, 0, 7, 6],
        [31, 30, 2, 3, 4, 5, 25, 24, 23, 22, 10, 11, 12, 13, 17, 16, 15, 14, 18, 19, 20, 21, 9, 8, 7, 6, 26, 27, 28, 29, 1, 0],
        [25, 24, 31, 3, 4, 5, 6, 26, 17, 16, 23, 11, 12, 13, 14, 18, 9, 8, 15, 19, 20, 21, 22, 10, 1, 0, 7, 27, 28, 29, 30, 2]
    ]
    # fmt: on
    assert np.array_equal(graph.generators, expected_generators)


def test_globe_2_6():
    graph = Puzzles.globe_puzzle(2, 6)

    assert graph.n_generators == 18
    expected_names_1 = ["r0", "r0_inv", "r1", "r1_inv", "r2", "r2_inv"]
    expected_names_2 = ["f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11"]
    assert graph.generator_names == expected_names_1 + expected_names_2

    # fmt: off
    expected_generators = [
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35],
        [11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 24],
        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34],
        [29, 28, 27, 26, 25, 24, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 5, 4, 3, 2, 1, 0, 30, 31, 32, 33, 34, 35],
        [0, 30, 29, 28, 27, 26, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 6, 5, 4, 3, 2, 1, 31, 32, 33, 34, 35],
        [0, 1, 31, 30, 29, 28, 27, 26, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 7, 6, 5, 4, 3, 2, 32, 33, 34, 35],
        [0, 1, 2, 32, 31, 30, 29, 28, 27, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 8, 7, 6, 5, 4, 3, 33, 34, 35],
        [0, 1, 2, 3, 33, 32, 31, 30, 29, 28, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 9, 8, 7, 6, 5, 4, 34, 35],
        [0, 1, 2, 3, 4, 34, 33, 32, 31, 30, 29, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 10, 9, 8, 7, 6, 5, 35],
        [0, 1, 2, 3, 4, 5, 35, 34, 33, 32, 31, 30, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 11, 10, 9, 8, 7, 6],
        [31, 1, 2, 3, 4, 5, 6, 24, 35, 34, 33, 32, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 7, 25, 26, 27, 28, 29, 30, 0, 11, 10, 9, 8],
        [33, 32, 2, 3, 4, 5, 6, 7, 25, 24, 35, 34, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 9, 8, 26, 27, 28, 29, 30, 31, 1, 0, 11, 10],
        [35, 34, 33, 3, 4, 5, 6, 7, 8, 26, 25, 24, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 11, 10, 9, 27, 28, 29, 30, 31, 32, 2, 1, 0],
        [25, 24, 35, 34, 4, 5, 6, 7, 8, 9, 27, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 0, 11, 10, 28, 29, 30, 31, 32, 33, 3, 2],
        [27, 26, 25, 24, 35, 5, 6, 7, 8, 9, 10, 28, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 3, 2, 1, 0, 11, 29, 30, 31, 32, 33, 34, 4],
    ]
    # fmt: on
    assert np.array_equal(graph.generators, expected_generators)
